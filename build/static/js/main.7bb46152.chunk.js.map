{"version":3,"sources":["ui/header/search-form/search-form.module.scss","ui/common/FormType/FormType.module.scss","ui/books-container/book-card/book-card.module.scss","ui/books-container/books-container.module.scss","ui/header/header.module.scss","ui/common/GoToScrollButton/FastScrollButton.module.scss","ui/common/Button/button.module.scss","ui/common/preloader/preloader.module.scss","ui/common/PreloaderBar/preloaderBar.module.scss","ui/books-container/Counter/counter.module.scss","ui/common/MaterialIcon/material-icon.module.scss","ui/BookInfo/book-info.module.scss","utils/validators.js","images/bg_books2.png","ui/common/FormType/FormType.tsx","ui/common/Button/Button.tsx","ui/header/search-form/search-form.tsx","api/books-api.ts","redux/request-form-reducer.ts","selectors/request-form-selectors.ts","ui/header/header.tsx","images/AnyBook.jpg","ui/books-container/Counter/Counter.tsx","images/Spinner.svg","ui/common/preloader/Preloader.tsx","ui/books-container/book-card/book-card.tsx","ui/common/GoToScrollButton/FastScrollButton.tsx","ui/books-container/books-container.tsx","ui/common/MaterialIcon/MaterialIcon.tsx","images/open-book.png","ui/common/PreloaderBar/PreloaderBar.tsx","ui/BookInfo/book-pre-shadow.tsx","ui/BookInfo/book-info.tsx","utils/utils.ts","ui/ui.tsx","redux/redux-store.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","max","FormType","input","meta","resetFieldBy","placeholder","isError","error","submitError","touched","className","styles","inputWrapper","search","clearSearch","dirty","clearSearchUnfocused","onClick","change","name","resetFieldState","errorSpan","Input","composeValidators","validators","value","reduce","validator","undefined","required","Button","disabled","title","mode","type","children","classes","button","SearchForm","onSubmit","selectProps","useSelector","state","requestFormReducer","initialValues","bookName","categories","orderBy","render","handleSubmit","pristine","form","submitting","component","validate","dropdowns","dropdown","label","select","map","buttonsPanel","reset","onError","instance","axios","create","baseURL","getBooksFromApi","startIndex","maxResults","intitle","subject","params","Object","fromEntries","entries","q","projection","key","filter","n","decodedQuery","decodeURIComponent","queryString","get","then","response","data","initialState","books","totalBooks","isFetching","pagination","request","bookToView","bookId","foundedBook","apiError","requestFormActions","getBooks","searchForm","dispatch","a","items","totalItems","alert","action","getIsFetching","getBooksList","getRequestBooks","getPagination","getTotalBooksNumber","getBookToView","getApiError","clearBooksList","nextIndex","saveRequest","headerStyle","bgBooks2","Header","navigate","useNavigate","useDispatch","style","header","head","inputForm","Counter","Preloader","hSize","preloader","image","src","preLoader","alt","BookCard","id","imageUrl","category","authors","to","container","FastScrollButton","goTo","useState","showGoTop","setShowGoTop","handleVisibleButton","window","pageYOffset","useEffect","addEventListener","scrollButton","scrollButtonHidden","scrollTo","left","top","behavior","scrollButtonIcon","BooksContainer","booksContainer","length","volumeInfo","imageLinks","thumbnail","smallThumbnail","anyBookImage","bottomWrapper","_nextIndex","total","booksLeft","scrollButtonsPanelFixed","scrollButtonsPanel","MaterialIcon","icon_name","iconsContent","PreloaderBar","height","wrapper","bar","BookPreShadow","side","color","fontWeight","width","description","Array","e","i","BookInfo","useParams","BookId","getOneBookFromApi","text","previewLink","replace","href","target","rel","role","UiComponent","ui","path","element","reducersObject","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleWare","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7bb46152.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"search-form_input__3f60y\",\"buttonsPanel\":\"search-form_buttonsPanel__-WVqX\",\"onError\":\"search-form_onError__3-zHo\",\"dropdowns\":\"search-form_dropdowns__3xXpD\",\"dropdown\":\"search-form_dropdown__3Yy0P\",\"label\":\"search-form_label__1N85Z\",\"select\":\"search-form_select__3JdOq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"FormType_inputWrapper__3HW-L\",\"error\":\"FormType_error__2gzEy\",\"search\":\"FormType_search__26aUC\",\"clearSearch\":\"FormType_clearSearch__yKxtO\",\"clearSearchUnfocused\":\"FormType_clearSearchUnfocused__sfiz6\",\"input\":\"FormType_input__nNhl8\",\"errorSpan\":\"FormType_errorSpan__lzM5N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"book-card_container__1q1ed\",\"image\":\"book-card_image__17Rt1\",\"category\":\"book-card_category__tsFOD\",\"bookName\":\"book-card_bookName__3C2Hm\",\"authors\":\"book-card_authors__3JrRV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"booksContainer\":\"books-container_booksContainer__3GLwj\",\"bottomWrapper\":\"books-container_bottomWrapper__3Bhyh\",\"scrollButtonsPanelFixed\":\"books-container_scrollButtonsPanelFixed__3W8We\",\"scrollButtonsPanel\":\"books-container_scrollButtonsPanel__1Vsug\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__NoY6z\",\"head\":\"header_head__1a7_l\",\"inputForm\":\"header_inputForm__3R3aD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrollButtonHidden\":\"FastScrollButton_scrollButtonHidden__16x3p\",\"scrollButton\":\"FastScrollButton_scrollButton__389pU\",\"scrollButtonIcon\":\"FastScrollButton_scrollButtonIcon__3J9vU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__3SAC4\",\"buttonOrange\":\"button_buttonOrange__2K32E\",\"buttonBlue\":\"button_buttonBlue__Nuzpm\",\"buttonPink\":\"button_buttonPink__29ig9\",\"buttonLightBlue\":\"button_buttonLightBlue__IJZko\",\"buttonGray\":\"button_buttonGray__WPMJn\",\"buttonWhite\":\"button_buttonWhite__3ZvDJ\",\"buttonNoFill\":\"button_buttonNoFill__aMnU4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__3EjGu\",\"image\":\"preloader_image__2B5n8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"preloaderBar_wrapper__1y2GP\",\"bar\":\"preloaderBar_bar__2_CyS\",\"gradient\":\"preloaderBar_gradient__2ZXyx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"counter_header__1YC6x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconsContent\":\"material-icon_iconsContent__1GQEl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"book-info_container__i_983\",\"side\":\"book-info_side__2FrIB\",\"image\":\"book-info_image__3nnKa\",\"category\":\"book-info_category__1YFVd\",\"bookName\":\"book-info_bookName__28RYi\",\"authors\":\"book-info_authors__3CBtG\",\"description\":\"book-info_description__3QeTd\",\"buttonsPanel\":\"book-info_buttonsPanel__3WxN-\"};","export const composeValidators = (...validators) => (value) =>\r\n  validators.reduce((error, validator) => error || validator(value), undefined);\r\n/////////////////////////////////////////////////////////////////////////////////\r\nexport const required = (value) => (value ? undefined : \"Required\")\r\n\r\nconst maxLength = (max) => (value) => ((value.length>max) ? `Over ${max} symbols!` : undefined);\r\nexport const maxLength15 = maxLength(15)\r\n\r\nexport const mustBeNumber = (value) => (isNaN(value) ? \"Must be a number\" : undefined);\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/bg_books2.c463d432.png\";","import React from 'react'\r\nimport styles from './FormType.module.scss'\r\nimport { FieldState, FormApi } from 'final-form'\r\n\r\ntype OwnProps = {\r\n    resetFieldBy: FormApi\r\n    placeholder?: string\r\n    meta: FieldState<any>\r\n    input: any\r\n}\r\n\r\n\r\nconst FormType = ( FormType: 'textarea' | 'input' ): React.FC<OwnProps> => (\r\n    {\r\n        input, meta, resetFieldBy, placeholder,\r\n    } ) => {\r\n\r\n    const isError = (meta.error || meta.submitError) && meta.touched\r\n\r\n    return (<div className={ styles.inputWrapper + ' ' + styles.search }>\r\n            {/*кнопка для сброса параметров поля\r\n            (проявляется, если переданы методы resetFieldBy={form} в объявленном объекте Field*/ }\r\n            { resetFieldBy && <div\r\n              className={ styles.clearSearch + ' ' + (!meta.dirty && styles.clearSearchUnfocused) }\r\n              onClick={ () => {\r\n                  resetFieldBy.change( input.name, '' )\r\n                  resetFieldBy.resetFieldState( input.name )\r\n              } }\r\n            > </div>\r\n            }\r\n            <FormType\r\n                { ...input }\r\n                className={ styles.input + ' ' + (isError ? styles.error : '') }\r\n                placeholder={ placeholder }\r\n            />\r\n\r\n            {/*сообщение об ошибке появляется в этом спане*/ }\r\n            { isError && (<span className={ styles.errorSpan }>{ meta.error }</span>) }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextArea = FormType( 'textarea' )\r\nexport const Input = FormType( 'input' )\r\n","import React from 'react'\r\nimport classes from './button.module.scss'\r\n\r\ntype OwnProps = {\r\n    disabled?: boolean,\r\n    onClick?: () => void,\r\n    mode?: 'Orange' | 'Blue'| 'LightBlue' | 'Pink' | 'Gray' | 'White' | 'NoFill'\r\n    type?: 'button' | 'submit' | 'reset'\r\n    title?: string\r\n}\r\n\r\nexport const Button: React.FC<OwnProps> = (\r\n    {\r\n        disabled, onClick, title,\r\n        mode = 'NoFill', type = 'button', children\r\n    } ) => {\r\n\r\n    return <button className={ classes.button + ' ' + classes['button' + mode] }\r\n                   disabled={ disabled }\r\n                   onClick={ onClick }\r\n                   type={ type }\r\n                   title={title}\r\n    >{ // отображаем то что внутри тега Button\r\n        children\r\n    }\r\n    </button>\r\n}\r\n\r\n","import React from 'react'\r\nimport styles from './search-form.module.scss'\r\n\r\nimport { Field, Form } from 'react-final-form'\r\nimport { Input } from '../../common/FormType/FormType'\r\nimport { composeValidators, required } from '../../../utils/validators'\r\nimport { BooksRequest } from '../../../types/books-api-types'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppStateType } from '../../../redux/redux-store'\r\nimport { Button } from '../../common/Button/Button'\r\n\r\n\r\ntype OwnProps = {\r\n    onSubmit: ( searchForm: BooksRequest ) => void\r\n}\r\n\r\nconst SearchForm: React.FC<OwnProps> = ( { onSubmit } ) => {\r\n\r\n    const selectProps = useSelector( ( state: AppStateType ) => state.requestFormReducer.selectProps )\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={ onSubmit }\r\n            initialValues={ {\r\n                bookName: '',\r\n                categories: 'all',\r\n                orderBy: 'relevance',\r\n            } as BooksRequest }\r\n            render={\r\n                ( { submitError, handleSubmit, pristine, form, submitting } ) => (\r\n                    <form onSubmit={ handleSubmit }>\r\n                        <Field name={ 'bookName' }\r\n                               placeholder={ 'Enter book here' }\r\n                               component={ Input }\r\n                               resetFieldBy={ form }\r\n                               type={ 'input' }\r\n                               validate={ composeValidators( required ) }\r\n                        />\r\n                        <div className={ styles.dropdowns }>\r\n                            <div className={ styles.dropdown }>\r\n                                <label className={ styles.label }>{ 'Categories' }</label>\r\n                                <Field className={ styles.select } name={ 'categories' } component={ 'select' }>\r\n                                    { selectProps.categories.map( value =>\r\n                                        <option value={ value } key={ value }>{ value }</option> )\r\n                                    }\r\n                                </Field>\r\n                            </div>\r\n                            <div className={ styles.dropdown }>\r\n                                <label className={ styles.label }>{ 'Sorting by' }</label>\r\n                                <Field className={ styles.select } name={ 'orderBy' } component={ 'select' }>\r\n                                    { selectProps.orderBy.map( value =>\r\n                                        <option value={ value } key={ value }>{ value }</option> )\r\n                                    }\r\n                                </Field>\r\n                            </div>\r\n                        </div>\r\n                        <div className={ styles.buttonsPanel }>\r\n                            <Button type={ 'submit' } disabled={ submitting } mode={ 'White' }>Done</Button>\r\n                            <Button type={ 'reset' }\r\n                                    disabled={ pristine || submitting }\r\n                                    onClick={ () => {\r\n                                        form.reset()\r\n                                    } }\r\n                                    mode={ 'Gray' }\r\n                            >X\r\n                            </Button>\r\n                        </div>\r\n                        { submitError && <span className={ styles.onError }>{ submitError }</span> }\r\n                    </form>\r\n                )\r\n            }/>\r\n    )\r\n}\r\n\r\nexport default SearchForm\r\n","import axios from 'axios'\r\nimport { BooksApiResponseType, BooksRequest, PaginationType } from '../types/books-api-types'\r\nimport * as queryString from 'querystring'\r\nimport { BookInfoType } from '../redux/initial-book'\r\n\r\nconst API_KEY = 'AIzaSyAYL_h8bTjemmcHhKGtf2V9-CtalYYMT04'\r\n\r\nconst instance = axios.create( {\r\n    baseURL: 'https://www.googleapis.com/books/v1/',\r\n} )\r\n\r\n// запрос на сервер\r\nexport const getBooksFromApi = ( { bookName, categories, orderBy }: BooksRequest,\r\n                                 { startIndex = 0, maxResults = 30 }: PaginationType ) => {\r\n    // пока непосредственно по имени появляются небольшие списки, поэтому ищем непосредтвенно по \"q\"\r\n    const intitle = `+intitle:${ bookName }`\r\n    // категория книг (согласно селектора)\r\n    const subject: string = categories === 'all' ? '' : `+subject:${ categories }`\r\n    // полное или краткое отображение информации в присылаемом ответе\r\n    const projection: 'full' | 'lite' = 'full'\r\n    // выбор языка\r\n    // const langRestrict: 'ru' | 'en' = 'ru'\r\n\r\n    // создаём объект для query,\r\n    const params = Object.fromEntries( Object\r\n        .entries( {\r\n            //q: ` ${ bookName }${ subject }`, // вариант, где ищется слово в книгах без привязки к названию\r\n            q: `${ intitle }${ subject }`,\r\n            orderBy, // фильтровать по возрастанию/убыванию\r\n            startIndex, // с какого индекса делать запрос\r\n            maxResults, // запрашиваемое количество книг (максимум 40)\r\n            projection, // полное или краткое отображение инфы (чувствительно к subject)\r\n            // langRestrict, // выбор языка\r\n            key: API_KEY,\r\n        } )\r\n        // чистим пустые значения\r\n        .filter( n => n[1] !== '' )\r\n        .filter( n => n[1] !== undefined ),\r\n    )\r\n    // меняем значение с процентного на нормальный запрос\r\n    const decodedQuery = decodeURIComponent( queryString.stringify( params ) )\r\n\r\n    return instance.get<BooksApiResponseType>( `volumes?${ decodedQuery }` )\r\n        .then( response => response.data )\r\n}\r\n\r\n\r\n// сообщение об ошибке, когда книга не найдена\r\n// export type BookInfoErrorType = {\r\n//     error: {\r\n//         code: number,\r\n//         message: string,\r\n//         errors: [\r\n//             {\r\n//                 message: string,\r\n//                 domain: string,\r\n//                 reason: string\r\n//             }\r\n//         ]\r\n//     }\r\n// }\r\n\r\n// загрузка одной книги по ID\r\nexport const getOneBookOverIdFromApi = ( BookId: string ) => {\r\n    return instance.get<BookInfoType>( `volumes/${ BookId }` )\r\n        .then( response => response.data )\r\n\r\n}\r\n","import { ThunkAction } from 'redux-thunk'\r\nimport { AppStateType, GetActionsTypes } from './redux-store'\r\nimport { BooksRequest, ItemBook, PaginationType } from '../types/books-api-types'\r\nimport { getBooksFromApi, getOneBookOverIdFromApi } from '../api/books-api'\r\nimport { BookInfoType } from './initial-book'\r\n\r\nconst initialState = {\r\n    books: [] as ItemBook[],\r\n    totalBooks: -1, // минус один, чтобы до первого поиска не отображалось количество найденных книг равное нулю\r\n    isFetching: false,\r\n    pagination: { // запрос на количество книг\r\n        maxResults: 30, // максимум - 40\r\n        startIndex: 0,\r\n    } as PaginationType,\r\n    request: { // сам запрос на книгу\r\n        orderBy: 'relevance',\r\n        categories: 'all',\r\n        bookName: '',\r\n    } as BooksRequest,\r\n    selectProps: { // параметры выбора в селекторах\r\n        categories: [ 'all', 'art', 'biography', 'computers', 'history', 'medical', 'poetry' ],\r\n        orderBy: [ 'relevance', 'newest' ],\r\n    },\r\n    bookToView: {\r\n        bookId: undefined as undefined | string,\r\n        foundedBook: null as BookInfoType | null,\r\n    },\r\n    apiError: null as null | string,\r\n}\r\n\r\nexport type RequestFormReducerStateType = typeof initialState\r\n\r\ntype ActionsType = GetActionsTypes<typeof requestFormActions>\r\n\r\nconst requestFormReducer = ( state = initialState, action: ActionsType ): RequestFormReducerStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'request-form-reducer/TOGGLE-IS-FETCHING': {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n        }\r\n        case 'request-form-reducer/SET-BOOKS': {\r\n            return {\r\n                ...state,\r\n                books: [ ...state.books, ...(action.books ?? []) ],\r\n            }\r\n        }\r\n        case 'request-form-reducer/CLEAR-BOOKS-LIST': {\r\n            return {\r\n                ...state,\r\n                books: [],\r\n            }\r\n        }\r\n        case 'request-form-reducer/SET-TOTAL-BOOKS-COUNT': {\r\n            return {\r\n                ...state,\r\n                totalBooks: action.totalBooks,\r\n            }\r\n        }\r\n        case 'request-form-reducer/NEXT-INDEX': {\r\n            return {\r\n                ...state,\r\n                pagination: {\r\n                    ...state.pagination,\r\n                    startIndex: action.startIndex,\r\n                },\r\n            }\r\n        }\r\n        case 'request-form-reducer/SAVE-REQUEST': {\r\n            return {\r\n                ...state,\r\n                request: action.request,\r\n            }\r\n        }\r\n        case 'request-form-reducer/SET-BOOK-ID-TO-VIEW': {\r\n            return {\r\n                ...state,\r\n                bookToView: {\r\n                    ...state.bookToView,\r\n                    bookId: action.bookId,\r\n                },\r\n            }\r\n        }\r\n        case 'request-form-reducer/SET-FOUNDED-BOOK-TO-VIEW': {\r\n            return {\r\n                ...state,\r\n                bookToView: {\r\n                    ...state.bookToView,\r\n                    foundedBook: action.foundedBook,\r\n                },\r\n            }\r\n        }\r\n        case 'request-form-reducer/SAVE-API-ERROR': {\r\n            return {\r\n                ...state,\r\n                apiError: action.error,\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n\r\n}\r\n\r\n// toDo: навести порядок в экшонах\r\n/* ЭКШОНЫ BOOKS */\r\nexport const requestFormActions = {\r\n    // установка значения в карточки пользователей одной страницы\r\n    setBooks: ( books: ItemBook[] | undefined ) => ({\r\n        type: 'request-form-reducer/SET-BOOKS',\r\n        books,\r\n    } as const),\r\n    clearBooksList: () => ({\r\n        type: 'request-form-reducer/CLEAR-BOOKS-LIST',\r\n    } as const),\r\n    // выставляет значение всего найденных книг\r\n    setTotalBooksCount: ( totalBooks: number ) => ({\r\n        type: 'request-form-reducer/SET-TOTAL-BOOKS-COUNT',\r\n        totalBooks,\r\n    } as const),\r\n    setBookIdToView: ( bookId: string | undefined ) => ({\r\n        type: 'request-form-reducer/SET-BOOK-ID-TO-VIEW',\r\n        bookId,\r\n    } as const),\r\n    setFoundedBook: ( foundedBook: BookInfoType | null ) => ({\r\n        type: 'request-form-reducer/SET-FOUNDED-BOOK-TO-VIEW',\r\n        foundedBook,\r\n    } as const),\r\n    // ожидание отклика API на запрос поиска пользователей\r\n    toggleIsFetching: ( isFetching: boolean ) => ({\r\n        type: 'request-form-reducer/TOGGLE-IS-FETCHING',\r\n        isFetching,\r\n    } as const),\r\n    // с какого ИНДЕКСА отображать страницы\r\n    nextIndex: ( startIndex: number ) => ({\r\n        type: 'request-form-reducer/NEXT-INDEX',\r\n        startIndex,\r\n    } as const),\r\n    // сохранить данные запроса\r\n    saveRequest: ( request: BooksRequest ) => ({\r\n        type: 'request-form-reducer/SAVE-REQUEST',\r\n        request,\r\n    } as const),\r\n    // ошибка сервера\r\n    setApiError: ( error: string | null ) => ({\r\n        type: 'request-form-reducer/SAVE-API-ERROR',\r\n        error,\r\n    } as const),\r\n}\r\n\r\n/* САНКИ */\r\n\r\nexport type UsersReducerThunkActionType<R = void> = ThunkAction<Promise<R>, AppStateType, unknown, ActionsType>\r\n\r\n// запрос на API и запись в стейт значений поиска книг\r\nexport const getBooks = ( searchForm: BooksRequest,\r\n                          pagination: PaginationType ): UsersReducerThunkActionType =>\r\n    async ( dispatch ) => {\r\n        // отображение статуса обработки запроса\r\n        dispatch( requestFormActions.toggleIsFetching( true ) )\r\n        try {\r\n            const response = await getBooksFromApi( searchForm, pagination )\r\n            dispatch( requestFormActions.setBooks( response.items ) )\r\n            dispatch( requestFormActions.setTotalBooksCount( response.totalItems ) )\r\n        } catch (e) {\r\n            alert( 'Error from Thunk is: ' + e )\r\n        }\r\n        // окончание отображение статуса обработки запроса\r\n        dispatch( requestFormActions.toggleIsFetching( false ) )\r\n    }\r\n\r\nexport const getOneBookFromApi = ( bookId: string ): UsersReducerThunkActionType =>\r\n    async ( dispatch ) => {\r\n        dispatch( requestFormActions.setApiError( null ) )\r\n        try {\r\n            const response = await getOneBookOverIdFromApi( bookId )\r\n            dispatch( requestFormActions.setFoundedBook( response as BookInfoType ) )\r\n        } catch (e) {\r\n            dispatch( requestFormActions.setFoundedBook( null ) )\r\n            dispatch( requestFormActions.setApiError( 'НЕ НАЙДЕНО КНИГ ПО ДАННОМУ iD: ' + bookId ) )\r\n            // alert( 'НЕ НАЙДЕНО КНИГ ПО ДАННОМУ iD: ' + bookId )\r\n            // alert( 'ошибка сервера: ' + e )\r\n        }\r\n\r\n    }\r\nexport default requestFormReducer\r\n","import { AppStateType } from '../redux/redux-store'\r\nimport { RequestFormReducerStateType } from '../redux/request-form-reducer'\r\n\r\ntype RequestFormSelectors<T extends keyof Y, Y = RequestFormReducerStateType> = ( state: AppStateType ) => Y[T]\r\n\r\nexport const getIsFetching: RequestFormSelectors<'isFetching'> = ( state ) => state.requestFormReducer.isFetching\r\nexport const getBooksList: RequestFormSelectors<'books'> = ( state ) => state.requestFormReducer.books\r\nexport const getRequestBooks: RequestFormSelectors<'request'> = ( state ) => state.requestFormReducer.request\r\nexport const getPagination: RequestFormSelectors<'pagination'> = ( state ) => state.requestFormReducer.pagination\r\nexport const getTotalBooksNumber: RequestFormSelectors<'totalBooks'> = ( state ) => state.requestFormReducer.totalBooks\r\nexport const getBookToView: RequestFormSelectors<'bookToView'> = ( state ) => state.requestFormReducer.bookToView\r\nexport const getApiError: RequestFormSelectors<'apiError'> = ( state ) => state.requestFormReducer.apiError\r\n\r\n// // выборка из списка загруженных книг (пока отключил) - загружаю каждую книгу напрямую из API\r\n// export const getOneBookFromLocal = createSelector( getBooksList, getBookToView,\r\n//     ( booksList, bookToView ): ItemBook['volumeInfo'] | undefined => {\r\n//         return booksList.filter( ( book ) => book.id === bookToView.bookId )[0]?.volumeInfo\r\n//     } )\r\n","import React from 'react'\r\nimport classes from './header.module.scss'\r\nimport bgBooks2 from '../../images/bg_books2.png'\r\nimport SearchForm from './search-form/search-form'\r\nimport { BooksRequest } from '../../types/books-api-types'\r\nimport { getBooks, requestFormActions } from '../../redux/request-form-reducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { getPagination } from '../../selectors/request-form-selectors'\r\n\r\nconst { clearBooksList, nextIndex, saveRequest } = requestFormActions\r\n\r\nconst headerStyle: React.CSSProperties = {\r\n    // вставил так, пока не знаю как правильно воткнуть ссылку на картинку в bg\r\n    'backgroundImage': `linear-gradient(0deg, #00000080, #00000020, #00000080), url(${ bgBooks2 })`,\r\n}\r\n\r\ntype OwnProps = {}\r\n\r\nexport const Header: React.FC<OwnProps> = () => {\r\n\r\n    const headerText = 'Search for books' // захардкодил название\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const pagination = useSelector( getPagination )\r\n\r\n    const onSubmit = ( searchForm: BooksRequest ) => {\r\n        // возвращаем на страницу поиска\r\n        navigate( '/search' )\r\n        // возвращаем на нулевой индеск\r\n        dispatch( nextIndex( 0 ) )\r\n        // очищаем список книг\r\n        dispatch( clearBooksList() )\r\n        // сохраняем данные запроса\r\n        dispatch( saveRequest( searchForm ) )\r\n        // отправляем запрос\r\n        dispatch( getBooks( searchForm, { ...pagination, startIndex: 0 } ) )\r\n    }\r\n\r\n    return (\r\n        <header style={ headerStyle } className={ classes.header }>\r\n            <h1 className={ classes.head }>{ headerText }</h1>\r\n            <div className={ classes.inputForm }>\r\n                <SearchForm onSubmit={ onSubmit }/>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/AnyBook.16c1d794.jpg\";","import React from 'react';\r\nimport classes from './counter.module.scss'\r\n\r\ntype OwnProps = {\r\n  totalBooks: number\r\n}\r\n\r\nconst Counter: React.FC<OwnProps> = ({totalBooks}) => {\r\n  return <h2 className={classes.header}>Found {totalBooks} results</h2>\r\n}\r\n\r\nexport default Counter\r\n","export default __webpack_public_path__ + \"static/media/Spinner.27ac9e88.svg\";","import React from 'react'\r\nimport styles from './preloader.module.scss'\r\nimport preLoader from '../../../images/Spinner.svg'\r\n\r\n\r\ntype OwnProps = {\r\n    hSize?: string\r\n}\r\n\r\nexport const Preloader: React.FC<OwnProps> = ( { hSize = '100%' } ) => {\r\n\r\n    return (\r\n        <span className={ styles.preloader } >\r\n            <img className={ styles.image } style={ { 'height': `${ hSize }` } } src={ preLoader } alt='preload'/>\r\n        </span>\r\n    )\r\n}\r\n","\r\nimport React from 'react'\r\nimport classes from './book-card.module.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// Найденные книги отображаются карточками, каждая из которых состоит из\r\n// изображения обложки книги, названия книги, названия категории и имен авторов.\r\n// Если для книги приходит несколько категорий, то отображается только первая. Авторы отображаются все.\r\n//  Если не приходит какой-либо части данных, то вместо нее просто пустое место.\r\n\r\ntype ComponentProps = {\r\n    id: string\r\n    imageUrl: string\r\n    category: string[]\r\n    title: string\r\n    authors: string[]\r\n}\r\n\r\nexport const BookCard: React.FC<ComponentProps> = (\r\n    {\r\n        id, imageUrl, category, title, authors,\r\n    } ) => {\r\n\r\n    return <Link to={ '/book/' + id } className={ classes.container }>\r\n        {/*<div className={classes.container}>*/ }\r\n        <img className={ classes.image } alt={ 'bookName' } src={ imageUrl }/>\r\n        <div className={ classes.category }>{ category }</div>\r\n        <div className={ classes.bookName }>{ title }</div>\r\n        <p className={ classes.authors }>{ authors }</p>\r\n        {/*</div>*/ }\r\n    </Link>\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport styles from './FastScrollButton.module.scss'\r\n\r\ntype OwnProps = {\r\n    goTo: 'top' | 'bottom',\r\n    title?: string,\r\n}\r\n\r\nexport const FastScrollButton: React.FC<OwnProps> = (\r\n    {\r\n        goTo, // два режима \"вверх\" и вниз\r\n        title, // описание кнопки при наведении курсора мыши\r\n    } ) => {\r\n\r\n    const [ showGoTop, setShowGoTop ] = useState( false )\r\n\r\n    const handleVisibleButton = () => { // кнопка визуализируется при возможности прокрутки вниз\r\n        setShowGoTop( window.pageYOffset > 50 )\r\n    }\r\n\r\n    const handleScrollUp = () => { // куда необходимо скроллиться при нажатии на кнопку\r\n        window.scrollTo( { left: 0, top: (goTo === 'top' ? 0 : 10000000), behavior: 'smooth' } )\r\n    }\r\n\r\n    useEffect( () => { // реализация визуализации кнопки\r\n        window.addEventListener( 'scroll', handleVisibleButton )\r\n    }, [] )\r\n\r\n    return (\r\n        <button type={ 'button' }\r\n                className={ styles.scrollButton + ' ' + (showGoTop ? '' : styles.scrollButtonHidden) }\r\n                title={ title || `Go ${ goTo }` }\r\n                onClick={ handleScrollUp }\r\n        >\r\n                <span className={ styles.scrollButtonIcon }>{\r\n                    `expand_${ goTo === 'top' ? 'less' : 'more' }`\r\n                }\r\n                </span>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport classes from './books-container.module.scss'\r\nimport anyBookImage from '../../images/AnyBook.jpg'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Counter from './Counter/Counter'\r\nimport { Preloader } from '../common/preloader/Preloader'\r\nimport { BookCard } from './book-card/book-card'\r\nimport { getBooks, requestFormActions } from '../../redux/request-form-reducer'\r\nimport { Button } from '../common/Button/Button'\r\nimport {\r\n    getBooksList, getIsFetching,\r\n    getPagination,\r\n    getRequestBooks,\r\n    getTotalBooksNumber,\r\n} from '../../selectors/request-form-selectors'\r\nimport { FastScrollButton } from '../common/GoToScrollButton/FastScrollButton'\r\n\r\nconst { nextIndex } = requestFormActions\r\n\r\ntype OwnProps = {}\r\n\r\nexport const BooksContainer: React.FC<OwnProps> = () => {\r\n\r\n    const { maxResults, startIndex } = useSelector( getPagination )\r\n    const dispatch = useDispatch()\r\n\r\n    const isFetching = useSelector( getIsFetching )\r\n    const request = useSelector( getRequestBooks )\r\n    const totalBooks = useSelector( getTotalBooksNumber )\r\n    const books = useSelector( getBooksList )\r\n\r\n    const nextPage = () => {\r\n        const _nextIndex = startIndex + maxResults\r\n        dispatch( nextIndex( _nextIndex ) )\r\n        dispatch( getBooks( request, { maxResults, startIndex: _nextIndex } ) )\r\n    }\r\n\r\n    const lastPage = (): boolean => {\r\n        return (totalBooks - (startIndex + maxResults)) <= 0\r\n    }\r\n\r\n    const booksLeft = (): string => {\r\n        const total = totalBooks - books.length\r\n        return `${ total < 1 ? 0 : total } more`\r\n    }\r\n\r\n    return (<div>\r\n            { isFetching || totalBooks<0 || <Counter totalBooks={ totalBooks }/> }\r\n            <div className={ classes.booksContainer }>\r\n                { books.length > 0\r\n                    ? books.map( ( {\r\n                                       id,\r\n                                       volumeInfo: {\r\n                                           imageLinks, categories, title, authors,\r\n                                       },\r\n                                   } ) => {\r\n                        return <BookCard key={ id }\r\n                                         id={ id }\r\n                                         imageUrl={ imageLinks?.thumbnail || imageLinks?.smallThumbnail || anyBookImage }\r\n                                         category={ categories }\r\n                                         title={ title }\r\n                                         authors={ authors }\r\n                        />\r\n                    } )\r\n                    : isFetching && <Preloader hSize={ '50rem' }/>\r\n                }\r\n            </div>\r\n            { (books.length !== 0) &&\r\n            <div className={ classes.bottomWrapper }>\r\n              <Button disabled={ isFetching || lastPage() }\r\n                      onClick={ nextPage }\r\n                      mode={ 'Orange' }\r\n                      title={ booksLeft() }\r\n              >  { isFetching && <Preloader hSize={ '2rem' }/> }\r\n                  { ' Load more' }\r\n              </Button>\r\n            </div> }\r\n            <div className={ classes.scrollButtonsPanelFixed }>\r\n                <div className={ classes.scrollButtonsPanel }>\r\n                    <FastScrollButton goTo={ 'top' }/>\r\n                    <FastScrollButton goTo={ 'bottom' }/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styles from './material-icon.module.scss'\r\n\r\ntype OwnProps = {\r\n    icon_name: 'search' | 'expand_more' | 'close' | 'expand_less' | 'menu_book' | 'reply'\r\n}\r\n\r\nexport const MaterialIcon: React.FC<OwnProps> = ( { icon_name } ) => {\r\n\r\n    return (\r\n        <span className={ styles.iconsContent }>{ icon_name }</span>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/open-book.58326e6d.png\";","import React from 'react'\r\nimport styles from './preloaderBar.module.scss'\r\n\r\ntype OwnProps = {\r\n    height?: string\r\n}\r\n\r\nexport const PreloaderBar: React.FC<OwnProps> = ({height= '1.5rem'}) => {\r\n\r\n    return (\r\n        <div className={ styles.wrapper } style={{ 'height': `${ height }` }}>\r\n            <div className={ styles.bar }> </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport classes from './book-info.module.scss'\r\nimport { Button } from '../common/Button/Button'\r\nimport anyBookImage from '../../images/open-book.png'\r\nimport { PreloaderBar } from '../common/PreloaderBar/PreloaderBar'\r\nimport { useSelector } from 'react-redux'\r\nimport { getApiError } from '../../selectors/request-form-selectors'\r\n\r\nexport const BookPreShadow: React.FC = () => {\r\n\r\n    const apiError = useSelector( getApiError )\r\n\r\n    return (<div className={ classes.container }>\r\n            <div className={ classes.side }>\r\n                <img className={ classes.image } alt={ 'emptyPreloader' }\r\n                     src={ anyBookImage }/>\r\n                <div style={ { color: 'red', fontWeight: 'bold' } }>{ apiError }</div>\r\n            </div>\r\n            <div className={ classes.side }>\r\n                <p className={ classes.category } style={ { width: '70%' } }>\r\n                    <PreloaderBar height={ '1.8rem' }/>\r\n                </p>\r\n                <h2 className={ classes.bookName } style={ { width: '50%' } }>\r\n                    <PreloaderBar height={ '2.25rem' }/>\r\n                </h2>\r\n                <article className={ classes.authors } style={ { width: '60%' } }>\r\n                    <PreloaderBar height={ '1.8rem' }/>\r\n                </article>\r\n                <p className={ classes.description }>\r\n                    {\r\n                        [ ...Array( 8 ) ]\r\n                            .map( ( e, i ) =>\r\n                                <PreloaderBar key={ i } height={ '1.7rem' }/> )\r\n                    }\r\n                </p>\r\n\r\n                <div className={ classes.buttonsPanel }>\r\n                    { [ 'Pink', 'Gray' ]\r\n                        .map( ( e, i ) =>\r\n                            <Button disabled={ true }\r\n                                    key={ e + i }\r\n                                    mode={ e as 'Pink' | 'Gray' }\r\n                                    title={ 'PreButton' }\r\n                            >\r\n                                <div style={ { width: '5rem' } }>\r\n                                    <PreloaderBar/>\r\n                                </div>\r\n                            </Button> )\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport classes from './book-info.module.scss'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Button } from '../common/Button/Button'\r\nimport anyBookImage from '../../images/AnyBook.jpg'\r\nimport { getBookToView, getTotalBooksNumber } from '../../selectors/request-form-selectors'\r\nimport { getOneBookFromApi, requestFormActions } from '../../redux/request-form-reducer'\r\nimport { removeAllHTMLTags } from '../../utils/utils'\r\nimport { MaterialIcon } from '../common/MaterialIcon/MaterialIcon'\r\nimport { BookPreShadow } from './book-pre-shadow'\r\n\r\n\r\n// здесь буду специально использовать хуки\r\nexport const BookInfo: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    // вытаскиваем значение роутера\r\n    const { bookId } = useParams<{ bookId: string | undefined }>()\r\n    const { foundedBook } = useSelector( getBookToView )\r\n\r\n    // для кнопки \"назад\" если мы зашли не из списка, то некуда возвращаться\r\n    const totalBooks = useSelector( getTotalBooksNumber )\r\n    // для кнопки \"назад\"\r\n    const navigate = useNavigate()\r\n\r\n    useEffect( () => {\r\n        if (foundedBook?.id !== bookId) { // избавляемся от лишнего просмотра, если книга та же самая\r\n            // назначаем id книги в стэйт (для дальнейшего сравнения)\r\n            dispatch( requestFormActions.setBookIdToView( bookId ) )\r\n            // запрашиваем книгу из API\r\n            dispatch( getOneBookFromApi( bookId || 'test' ) )\r\n        }\r\n    }, [] )\r\n\r\n    // предзагрузочная форма при обновлении запроса\r\n    if (foundedBook === null || foundedBook.id !== bookId) return <BookPreShadow/>\r\n    else {\r\n        const {\r\n            volumeInfo: {\r\n                imageLinks,\r\n                categories,\r\n                title,\r\n                authors,\r\n                description,\r\n                previewLink,\r\n            },\r\n        } = foundedBook\r\n        return (<div className={ classes.container }>\r\n                <div className={ classes.side }>\r\n                    <img className={ classes.image } alt={ 'bookName' }\r\n                         src={ imageLinks?.thumbnail || imageLinks?.smallThumbnail || anyBookImage }/>\r\n                </div>\r\n                <div className={ classes.side }>\r\n                    <p className={ classes.category }>{ categories }</p>\r\n                    <h2 className={ classes.bookName } title={'Book header'}>{ title }</h2>\r\n                    <article className={ classes.authors } title={'Authors'}>{ authors }</article>\r\n                    <p className={ classes.description }>{ removeAllHTMLTags( description ) }</p>\r\n\r\n                    <div className={ classes.buttonsPanel }>\r\n                        <a href={ previewLink }\r\n                           target=\"_blank\" rel=\"noopener noreferrer\"\r\n                           role={ 'button' }>\r\n                            <Button disabled={ !previewLink }\r\n                                    mode={ 'White' }\r\n                                    title={ 'Read in Google' }\r\n                            >\r\n                                <MaterialIcon icon_name={ 'menu_book' }/>{ ' Read' }</Button>\r\n                        </a>\r\n                        < Button disabled={ totalBooks <= 0 }\r\n                                 mode={ 'LightBlue' }\r\n                                 title={ 'Go back' }\r\n                                 onClick={ () => navigate( -1 ) }\r\n                        >\r\n                            <MaterialIcon icon_name={ 'reply' }/>{' To List'}</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export const removeAllHTMLTags = ( text: string ): string =>\r\n    text.replace( /<.+?>/g, '' ).replace( /&nbsp;/ig, '' )\r\n","import React from 'react'\r\nimport classes from './ui.module.scss'\r\nimport { Header } from './header/header'\r\nimport { BooksContainer } from './books-container/books-container'\r\nimport {\r\n    Navigate,\r\n    Route,\r\n    Routes,\r\n} from 'react-router-dom'\r\nimport { BookInfo } from './BookInfo/book-info'\r\n\r\nexport const UiComponent: React.FC = () => {\r\n\r\n    return (\r\n        <section className={ classes.ui }>\r\n            <Header/>\r\n            <div>\r\n                <Routes>\r\n                    <Route path='/' element={ <Navigate to={ '/search' }/> }/>\r\n                    <Route path='/search' element={ <BooksContainer/> }/>\r\n                    <Route path='/book/:bookId' element={ <BookInfo/> }/>\r\n                    <Route path='*' element={ <h1>This site NOT FOUND. Try another address</h1> }/>\r\n                </Routes>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleWare from \"redux-thunk\";\r\n\r\nimport requestFormReducer from \"./request-form-reducer\";\r\n\r\n\r\nconst reducersObject = {\r\n  requestFormReducer\r\n}\r\n\r\nconst rootReducer = combineReducers(reducersObject)\r\n\r\ntype StateType = typeof rootReducer\r\nexport type AppStateType = ReturnType<StateType>\r\n\r\n// создал тип с обязательным type среди возвращаемых ключей для actions\r\nexport type ActionsAnyType = Record<string, (...args: any[]) => {type: string,[key: string]: any}>\r\n// комбайним все значения объекта\r\nexport type PropertiesType<T> = T extends {[key: string]: infer U} ? U : never;\r\n// возвращаем комбайн возвращаемых значений, также extends-ом проверяем, является ли он типом ActionsAnyType\r\n// также удаляем вcе undefined и null\r\nexport type GetActionsTypes<T extends ActionsAnyType> = NonNullable<ReturnType<PropertiesType<T>>>\r\n\r\n// для расширения reduxDevTool в браузере и отслеживания стейта\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// возвращаем стор вместе с санками\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleWare)));\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleWare));\r\n\r\nexport default store\r\n","import React from 'react'\nimport './App.scss'\nimport { UiComponent } from './ui/ui'\nimport store from './redux/redux-store'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\n\n\nconst App: React.FC = () => {\n\n    return (\n        <Provider store={ store }>\n            <BrowserRouter>\n                <div className=\"container\">\n                    <UiComponent/>\n                </div>\n            </BrowserRouter>\n        </Provider>\n    )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}