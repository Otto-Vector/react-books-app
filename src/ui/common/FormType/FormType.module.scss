@import "src/styles/variables";
@import "src/styles/mixins";

$input-book-name--font : $Quicksand;

.inputBookName {
  font-family: $input-book-name--font;
  font-size: rem(15);
  text-align: center;
  position: relative;
  background-color: whitesmoke;
  border-radius: rem(4);

  .error {
    border-color: red;
}
}

  .search:after, .clearSearch:before {
    @include addMaterialAfter('');
  }

  .clearSearch {
    position: absolute;
    background-color: inherit;
    @include size(rem(20));
    left: rem(10);
    top: rem(15);
    transition-property: transform;
    transform: rotate(0);
    transition-duration: .25s;
    cursor: pointer;

    &:before {
      top: 0;
      right: 0;
      content: 'close';
    }

    &:hover {
      transform: scale(1.1);
    }
  }

  .search:after {
    cursor: unset;
    opacity: .5;
    content: 'search';
  }

  .input {
    font-family: $input-book-name--font; //переназначаем шрифт, потому что input находится в label и наследует
    outline: none; //чтобы input не подсвечивался
    box-sizing: border-box;
    background: inherit;
    font-size: rem(15);
    line-height: rem(20);
    border: solid {
      color: $black-50;
      radius: rem(4);
      width: 2px;
    }
    padding: rem(13) rem(35) rem(15);
    width: 100%;

    transition-property: border;
    transition-duration: .3s;

    &:focus, &:hover {
      border: solid $black-75 2px;
    }

     &:valid { //поставил, потому что менялся цвет в настройках браузера при разфокусировке
      color: black;
    }

    &:invalid {
      color: darkred;
    }

    &:active {
    }

    @include placeholder() {
      font-family: $input-book-name--font;

      //обработка манипуляций с :placeholder
      position: absolute;
      top: rem(14);
      transition-property: all;
      transition-duration: .3s;
    }

    &:focus {
      @include placeholder() { //при фокусе, сообщение placeholder уходит вверх
        top:0;
        font-size: rem(12);
      }
    }

  }

.errorSpan {
    position: absolute;
    bottom: -15px;
    left: 5px;
    font-size: 70%;
    color: red;
    font-weight: bold;
    background-image: radial-gradient(rgba(255,255,255,1), rgba(255,255,255,0.1));
    border-radius: 5px;
}

.clearSearchUnfocused {
    opacity: .6;
  cursor: default;
}



/*.wrapper {*/
/*    box-sizing: border-box;*/
/*    position: relative;*/
/*    width: 100%;*/
/*    height: 100%;*/
/*    border-radius: inherit;*/
/*}*/

/*.textarea {*/
/*    box-sizing: border-box;*/
/*    width: 100%;*/
/*    height: 100%;*/
/*    background-color: inherit;*/
/*    border-radius: inherit;*/
/*    resize: none;*/
/*    padding: 3% 2%;*/
/*}*/

/*.textarea:focus {*/
/*    background-color: lightblue;*/
/*}*/



/*.span {*/
/*    position: absolute;*/
/*    bottom: -15px;*/
/*    left: 5px;*/
/*    font-size: 70%;*/
/*    color: red;*/
/*    font-weight: bold;*/
/*    background-image: radial-gradient(rgba(255,255,255,1), rgba(255,255,255,0.1));*/
/*    border-radius: 5px;*/
/*}*/

/*.resetButton{*/
/*    position: absolute;*/
/*    top: 5px;*/
/*    right: 5px;*/
/*    width: 10px;*/
/*    height: 10px;*/
/*    background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' height='24' viewBox='0 0 24 24' width='24'%3e%3cpath d='M0 0h24v24H0z' fill='none'/%3e%3cpath d='M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z'/%3e%3c/svg%3e");*/
/*    background-position: center center;*/
/*    background-repeat: no-repeat;*/
/*    opacity: 0;*/
/*    transform: scale3d(0,0,0);*/
/*    !*сначала немного увеличивается, потом исчезает*!*/
/*    transition: all cubic-bezier(0.68, -0.75, 0.265, 1.55) .3s;*/
/*}*/


